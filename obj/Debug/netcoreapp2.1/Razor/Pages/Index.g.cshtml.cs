#pragma checksum "E:\GitHub\HolidayChecklist\Pages\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "81f9cadc1c51cdecf25df351adb154f3bce11be2"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(HolidayChecklist.Pages.Pages_Index), @"mvc.1.0.razor-page", @"/Pages/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAttribute(@"/Pages/Index.cshtml", typeof(HolidayChecklist.Pages.Pages_Index), null)]
namespace HolidayChecklist.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "E:\GitHub\HolidayChecklist\Pages\_ViewImports.cshtml"
using HolidayChecklist;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"81f9cadc1c51cdecf25df351adb154f3bce11be2", @"/Pages/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0f90e6b79a2498bf38006f64a6095ea7bf4a53d3", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Index : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 3 "E:\GitHub\HolidayChecklist\Pages\Index.cshtml"
  
    ViewData["Title"] = "Home page";

#line default
#line hidden
            BeginContext(71, 120, true);
            WriteLiteral("<div class=\"container\" id=\"App\">\r\n    <div id = \"searchForm\" class = \"container\" style = \"padding-top: 20px;\">\r\n        ");
            EndContext();
            BeginContext(191, 655, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "809d509e2db94a50a3b2ea08bf0e6f7e", async() => {
                BeginContext(197, 642, true);
                WriteLiteral(@"
            <div class = ""col-xs-12 col-md-8"">
                <input v-model=""searchTerm"" class=""form-control form-control"" type=""text"" placeholder=""Search for a show...""v-on:keyup=""searchShow()"">
            </div>
            <div class = ""col-md-2"">
                <button  v-if=""desktop"" id = ""searchSubmit"" type = ""submit"" class = ""btn btn-primary"" v-on:click.stop.prevent='searchShow()'>Find</button>
            </div>
            <div class = ""col-md-2"">
                <button v-if=""desktop"" id = ""searchCancel"" class = ""btn btn-default"" v-on:click.stop.prevent=""emptySearch()"">Back</button>
            </div>
        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(846, 2572, true);
            WriteLiteral(@"
    </div>
    <div  v-show =""showSearchResults"" class=""container"" stle=""z-index: 3;"">
      <div class=""row text-center text-left"">
        <div class=""col-xs-12 col-md-8"">
          <div class=""list-group my-3"">
            <a v-for = ""item in searchResults"" href=""#"" class=""list-group-item list-group-item-action d-flex   align-items-center"">
                <div class =""row"">
                    <h4 v-if=""desktop"">{{item.name}} ({{item.first_air_date}})</h4>
                    <p v-else class=""mb-0 text-center"">{{item.name}} - ({{item.first_air_date.substring(0,4)}})</p>
                    <img v-if=""desktop"" class=""d-block float-right img-thumbnail img-fluid"" v-bind:src=""imgURL + item.poster_path"" width=""60"" height=""60"" > 
                    <button class=""btn btn-danger""><span class=""glyphicon glyphicon-heart"" aria-hidden=""true"" style =""color:white;""></span></button>
                    <button class=""btn btn-info"" v-on:click.stop.prevent=""showDetails(item)""><span class=""glyphicon glyphico");
            WriteLiteral(@"n-info-sign"" aria-hidden=""true"" style =""color:white;""></span></button>
                </div>
            </a>
          </div>
        </div>  
      </div>
    </div>
    <div v-if = ""showHighlightedShow"" class = ""container"" style =""background-color: white; margin-top: 20px;"">
        <div class=""col-xs-12 col-md-12"">
            <div class=""row"">
                <h3 style=""text-align:center;"">{{highlightedShow.name}}</h3>
            </div>
            <div class=""row"">
                <div class=""col-xs-4"" >
                    <div class=""row"">
                        <img v-bind:src=""imgURL + highlightedShow.poster_path"" width=""100%"" style=""border-radius: 10px;""/>
                    </div>
                    <div class=""row"">
                        <div class=""col-xs-12""><button v-on:click=""saveShow(highlightedShow)"" class=""btn btn-danger"" style=""width:100%; margin-top:10px""><span class=""glyphicon glyphicon-heart"" aria-hidden=""true"" style =""color:white;""></span></button></div>
    ");
            WriteLiteral(@"                </div>
                </div>
                <div class=""col-xs-8"">
                    <p>First Air Date: {{highlightedShow.first_air_date}}</p>
                    <p>{{highlightedShow.overview}}</p>
                </div>
            </div>
            <div class=""row"">
                <span><button class=""btn btn-default"" style=""width:100%;margin-bottom:10px;"" v-on:click.stop.prevent=""emptySearch()"">Cancel</button></span>
            </div>
        </div>
        
    </div>
</div>

");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(3436, 3941, true);
                WriteLiteral(@"
    <script>
    var ItemsVue = new Vue({
            el: '#App',
            data: {
                desktop: false,
                searchTerm: """",
                searchResults: """",
                highlightedShow: """",
                saveShow: {
                    first_air_date:"""",
                    title:"""",
                    seasons:0,
                    overview:"""",
                    backdrop_path:"""",
                }
                showSearchResults: false,
                showHighlightedShow: false,
                baseURL: ""https://api.themoviedb.org/3/"",
                imgURL: ""https://image.tmdb.org/t/p/w200"",
                apiKEY: ""api_key=dfb21457261ef1c427601ffcefc3da80""
            },
            
            mounted: function () {
            
               
            },
            methods: { 
                searchShow: function(searchTerm){
                    var self = this;
                    
                    if(self.searchTerm.lengt");
                WriteLiteral(@"h>=2){
                        self.showSearchResults = true;
                        $.ajax({
                        url: self.baseURL + ""search/tv?""+ self.apiKEY +""&language=en-US&query="" + self.searchTerm + ""&page=1"",
                        dataType: 'json',
                        contentType: 'application/json',
                        method: 'GET',
                        success: function (data) {
                            self.searchResults = data.results.sort(function(a,b){
                                return b.popularity - a.popularity;
                            }).slice(0,3);
                        },
                        error: function (error) {
                            console.log(error);
                            alert(""Oh no! We couldn't find your shows. D:"");
                        }
                        });
                    }
                    else{
                        self.showSearchResults = false;
                    }
                }");
                WriteLiteral(@",
                emptySearch: function(){
                    var self = this;
                    self.searchResults = '';
                    self.searchTerm = '';
                    self.showSearchResults = false;
                    self.showHighlightedShow = false;
                },
                showDetails: function(item){
                    var self = this;
                    self.showSearchResults = false;
                    self.highlightedShow= item;
                    self.showHighlightedShow = true;
                },
                saveShow: function(item){
                    var self = this;
                    self.saveShow = {
                        first_air_date: self.item.first_air_date,
                        title: self.item.title,
                        seasons: self.item.seasons,
                        overview: self.item.overview,
                        backdrop_path: self.item.backdrop_path,
                    };
                    console.log");
                WriteLiteral(@"(self.saveShow);
                    $.ajax({
                        url: ""/api/TVShows"",
                        dataType: 'json',
                        contentType: 'application/json',
                        method: 'POST',
                        data: JSON.stringify(requestData),
                        success: function (data) {
                            self.searchResults = data.results.sort(function(a,b){
                                return b.popularity - a.popularity;
                            }).slice(0,3);
                        },
                        error: function (error) {
                            console.log(error);
                            alert(""Oh no! We couldn't find your shows. D:"");
                        }
                        });
                }
            }     
        });
</script>
");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IndexModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel>)PageContext?.ViewData;
        public IndexModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
